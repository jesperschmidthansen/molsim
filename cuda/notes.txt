Notes:


* To submit interactive job specifying node: qsub -I -l nodes=bead50

* Some benchmarking
	GPUs: GeForce RTX 2080 Ti - <= bead50 
		GeForce GTX 1080 - bead43
		GeForce GTX 780 Ti - bead41
		GeForce GTX TITAN - bead40


	GTX4090: (21 April/14. Nov - i43)
		Npart   sps (update 10)   sps-auto  Octave wrap   
		1000    13e3   		        12e3      10e3			       
		4000    7000   				6135      5576 
		8000    3800   				3389      3145
		27000    746                762       751 

	GTX2080: 
		Npart   sps (update 10)   sps-auto     
		1000    11e3               10e3                        
		4000    4900               4706
		8000    2300               2358                     
		27000   148                340 
		
	bead72 4 threads                Labtop 4 threads
		Npart   sps                 sps    
		1000   2000                 5500 
		4000    350                 670           
		8000    150                 295
		27000    50                 90 
	

* GH sampling on cpu order of ~10 percent penalty 

* Neighbour-list update check is very slow at the moment (~30 percent penalty)- please update.
  It is the sep_cuda_sumdistance which is slow 

* Potential energy not calculated for intramolecular interactions (please fix)

* Optimimal threads per block is warp size 32 [at least for simple systems with size 1000-27000]

* Make an lj function with interface sep_cuda_force_lj(aptr, ljparam); that does not check types DONE

* Copying positions to sheared memory doen't help (in fact tests using GERMS nbody it is slower)

* Need a function that thermostat/scale velocities for types

* Tested compute capabilities 6.1
